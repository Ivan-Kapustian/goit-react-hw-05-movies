{"version":3,"file":"static/js/16.1829d630.chunk.js","mappings":"wOAAaA,EAAS,WACpB,OAAOC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,+CACZ,E,kBCAaC,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oHAQhBC,EAAOH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gCAIhBG,EAAML,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wDAKhBK,EAAOP,EAAAA,EAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2EAMfO,EAAYT,EAAAA,EAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+BCbpBS,EAAO,WAClB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,EAC7B,GAAG,CAACC,IAECF,EAIL,OACEO,EAAAA,EAAAA,MAACxB,EAAI,CAAAD,SAAA,CACc,IAAhBkB,EAAKQ,SAAgB3B,EAAAA,EAAAA,KAACD,EAAM,IAE5BoB,EAAKS,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAS,OAC5CP,EAAAA,EAAAA,MAACpB,EAAI,CAAAL,SAAA,EACHD,EAAAA,EAAAA,KAACQ,EAAG,CACF0B,IAjBS,mCAiBOC,OAAOJ,GACvBK,IAAI,MAENV,EAAAA,EAAAA,MAAA,OAAAzB,SAAA,EACED,EAAAA,EAAAA,KAACU,EAAI,CAAAT,SAAE+B,KACPhC,EAAAA,EAAAA,KAACY,EAAS,CAAAX,SAAEgC,SAPLH,EASJ,MAIf,C","sources":["components/Error/NoCast.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["export const NoCast = () => {\n  return <p>Sorry, we don't have any cast on this movie</p>;\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px 10px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  flex-basis: 150px;\n`;\n\nexport const Img = styled.img`\n  margin-bottom: 5px;\n  border-radius: 4px;\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 5px;\n  font-weight: 500;\n  color: orangered;\n`;\n\nexport const Character = styled.p`\n  color: orangered;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/fetchMovies';\nimport { NoCast } from 'components/Error/NoCast';\nimport {\n  List,\n  Item,\n  Img,\n  Name,\n  Character,\n} from './Cast.styled';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <List>\n      {cast.length === 0 && <NoCast />}\n\n      {cast.map(({ id, profile_path, name, character }) => (\n        <Item key={id}>\n          <Img\n            src={imgBaseUrl.concat(profile_path)}\n            alt=\"\"\n          />\n          <div>\n            <Name>{name}</Name>\n            <Character>{character}</Character>\n          </div>\n        </Item>\n      ))}\n    </List>\n  );\n};\n"],"names":["NoCast","_jsx","children","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Img","_templateObject3","Name","_templateObject4","Character","_templateObject5","Cast","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","_jsxs","length","map","_ref","id","profile_path","name","character","src","concat","alt"],"sourceRoot":""}